{"version":3,"file":"c978a1ff-36c89aa5571b49c0fba8.js","mappings":"iHAEIA,EAAiBC,E,wHAerB,IAAIC,EAAa,CAAEC,I,QAAKA,EAAKC,QAASA,EAAAA,GAClCC,GAASC,EAAAA,EAAAA,GAAQ,SAAkD,CAAEC,OAAQ,YAApED,CAAoK,CAAEE,KAAM,UAAWC,OAAQ,iMAE5M,IADc,SAAiBC,GAAQ,IAAIC,EAAgBC,EAAYF,EAAKE,UAAWC,EAAYH,EAAKG,UAAWC,EAAWJ,EAAKI,SAAUC,EAAYL,EAAKK,UAAWC,EAAWN,EAAKM,SAAUC,EAAOP,EAAKO,KAAMC,EAAeR,EAAKS,QAASA,OAA2B,IAAjBD,GAAkCA,EAA2DE,GAAyC,QAA5BT,GAA/CU,EAAAA,EAAAA,gBAAe,cAAkDC,YAAiC,IAAfX,OAAwB,EAASA,EAAWY,eAAiB,GAAI,OAAOC,EAAAA,EAAAA,IAAIC,EAAAA,EAAM,MAAMD,EAAAA,EAAAA,IAAIE,EAAAA,YAAa,CAAEC,WAAYzB,IAAcsB,EAAAA,EAAAA,IAAII,EAAAA,EAAQ,MAAMJ,EAAAA,EAAAA,IAAI,OAAQ,CAAEK,QAAS,WAAYL,EAAAA,EAAAA,IAAI,QAAS,KAAMZ,EAAWQ,EAASU,MAAQ,MAAQV,EAASU,MAAQ,MAAMN,EAAAA,EAAAA,IAAIO,EAAAA,EAAQ,MAAOlB,EAAY,MAAOW,EAAAA,EAAAA,IAAIQ,EAAAA,EAAQ,CAAEF,MAAOlB,EAAWI,SAAUA,EAAUC,KAAMA,EAAMF,UAAWA,KAAcS,EAAAA,EAAAA,IAAIS,EAAAA,GAAY,MAAM,SAAUC,GAAS,IAAIC,EAASC,EAAKF,EAAMG,IAAKC,EAAKJ,EAAMI,GAAI,OAAOd,EAAAA,EAAAA,IAAI,UAAW,CAAEa,IAAKC,GAAIH,EAAM,GAAIA,EAAIC,EAAGpC,IAAoBA,GAAkBuC,EAAAA,EAAAA,GAA4B,CAAC,gIAAkIpB,EAASgB,EAAIC,EAAGnC,IAAqBA,GAAmBsC,EAAAA,EAAAA,GAA4B,CAAC,+zBAAg0B,8xBAA+xB,0jCAA4jCC,EAAAA,EAAAA,GAAK,YAAYA,EAAAA,EAAAA,GAAK,SAAU,EAAML,KAASrB,OAAeU,EAAAA,EAAAA,IAAInB,EAAQ,MAAMmB,EAAAA,EAAAA,IAAI,UAAW,CAAEa,KAAmBA,EAAAA,EAAAA,IAAI,kBAAkBI,EAAAA,EAAAA,IAAG,MAAO,iBAA6H,GAA1J,SAAi9UjB,EAAAA,EAAAA,IAAIkB,EAAAA,KAAM,CAAEC,GAAI,IAAKN,KAAmBA,EAAAA,EAAAA,IAAI,wBAAwBG,EAAAA,EAAAA,GAAK,MAAO,mBAA+H,GAApK,SAA29UhB,EAAAA,EAAAA,IAAIoB,EAAAA,EAAa,CAAEP,KAAmBA,EAAAA,EAAAA,IAAI,sBAAsBG,EAAAA,EAAAA,GAAK,MAAO,yCAAqJ,GAAxL,OAA6+UK,OAAQ,GAAIC,IAAK,wBAAyBC,IAAK,OAAQC,YAAa,YAAaC,YAAaC,EAAQ,SAAuG1B,EAAAA,EAAAA,IAAI,MAAO,CAAEa,KAAmBA,EAAAA,EAAAA,IAAI,uDAAuDI,EAAAA,EAAAA,IAAG,MAAO,qEAAiL,GAAnP,SAA0iVjB,EAAAA,EAAAA,IAAIkB,EAAAA,KAAM,CAAEC,GAAI,KAAO,aAAanB,EAAAA,EAAAA,IAAIkB,EAAAA,KAAM,CAAEC,GAAI,aAAe,aAAanB,EAAAA,EAAAA,IAAIkB,EAAAA,KAAM,CAAEC,GAAI,YAAc,gBAAgBnB,EAAAA,EAAAA,IAAI,MAAO,CAAEa,KAAmBA,EAAAA,EAAAA,IAAI,sCAAsCG,EAAAA,EAAAA,GAAK,MAAO,6DAAyK,GAA5N,SAAmhVhB,EAAAA,EAAAA,IAAI,IAAK,KAAM,uBAA0B,IAAI2B,MAAOC,cAAe,kBAAkB5B,EAAAA,EAAAA,IAAI,IAAK,KAAM","sources":["webpack://zmbush.com/./src/components/default.tsx"],"sourcesContent":["import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _styled from \"@emotion/styled/base\";\nvar _templateObject, _templateObject2;\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; } /* @jsx jsx */\nimport { jsx, css, ClassNames } from '@emotion/react';\nimport '@fontsource/roboto/latin-300.css';\nimport '@fontsource/roboto/latin-400.css';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Link, useStaticQuery } from 'gatsby';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport { Helmet } from 'react-helmet';\nimport { up, down } from '../util/mediaQueries';\nimport Base from './base';\nimport Caption from './caption';\nimport Header from './header';\nimport Navbar from './navbar';\nimport Toc from './toc';\nvar shortCodes = { Toc: Toc, Caption: Caption };\nvar Footer = _styled(\"footer\", process.env.NODE_ENV === \"production\" ? { target: \"e9zy2yj0\" } : { target: \"e9zy2yj0\", label: \"Footer\" })(process.env.NODE_ENV === \"production\" ? { name: \"1pqebc2\", styles: \"margin-top:3rem;border-top:0.5rem solid #1976d2;padding:1.5rem;font-size:1.6rem;a{color:black;text-decoration:none;padding-left:1rem;padding-right:1rem;&:hover{text-decoration:underline;}}\" } : { name: \"1pqebc2\", styles: \"margin-top:3rem;border-top:0.5rem solid #1976d2;padding:1.5rem;font-size:1.6rem;a{color:black;text-decoration:none;padding-left:1rem;padding-right:1rem;&:hover{text-decoration:underline;}}\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ });\nvar Default = function Default(_ref) { var _data$site; var pageTitle = _ref.pageTitle, hideTitle = _ref.hideTitle, children = _ref.children, headerImg = _ref.headerImg, subtitle = _ref.subtitle, date = _ref.date, _ref$article = _ref.article, article = _ref$article === void 0 ? false : _ref$article; var data = useStaticQuery(\"4064466578\"); var metadata = ((_data$site = data.site) === null || _data$site === void 0 ? void 0 : _data$site.siteMetadata) || {}; return jsx(Base, null, jsx(MDXProvider, { components: shortCodes }, jsx(Helmet, null, jsx(\"meta\", { charSet: \"utf-8\" }), jsx(\"title\", null, pageTitle, metadata.title ? \" | \" + metadata.title : '')), jsx(Navbar, null), hideTitle ? null : jsx(Header, { title: pageTitle, subtitle: subtitle, date: date, headerImg: headerImg }), jsx(ClassNames, null, function (_ref2) { var _cx; var cs = _ref2.css, cx = _ref2.cx; return jsx(\"article\", { css: cx((_cx = {}, _cx[cs(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n                padding-top: 1rem;\\n                max-width: 75rem;\\n                margin: 0 auto;\\n              \"])))] = article, _cx[cs(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n                &:before,\\n                &:after {\\n                  content: '';\\n                  display: table;\\n                }\\n\\n                &:after {\\n                  clear: both;\\n                }\\n\\n                a {\\n                  text-decoration: none;\\n                  font-weight: 400;\\n                  color: #1565c0;\\n\\n                  &:hover {\\n                    text-decoration: underline;\\n                  }\\n                }\\n\\n                h1, h2, h3, h4, h5, h6 {\\n                  margin-top: 2rem;\\n\\n                  > a {\\n                    color: inherit;\\n                    font-weight: inherit;\\n                  }\\n                }\\n\\n                > {\\n                  p, div.gatsby-highlight, h1, h2, h3, h4, h5, h6, div.toc {\\n                    \", \" {\\n                      margin-left: 1rem;\\n                      margin-right: 1rem;\\n                    }\\n                  }\\n                }\\n\\n                > p {\\n\\n                  &:first-of-type {\\n                    text-indent: 0;\\n\\n                    &::first-letter {\\n                      color: #1976d2;\\n                      float: left;\\n                      font-size: 4.3rem;\\n                      font-weight: 300;\\n                      line-height: 1;\\n                    }\\n                  }\\n\\n                  text-indent: 2.5rem;\\n                  margin-bottom: 1rem;\\n                }\\n\\n                p {\\n                  margin-top: 1rem;\\n                  line-height: 1.5;\\n                }\\n\\n                img {\\n                  \", \" {\\n                    width: 100%;\\n                    height: auto;\\n                  }\\n                }\\n\\n                ol,ul {\\n                  // negative hanging indent for first line\\n                  text-indent: -3rem;\\n                  padding-left: 3rem;\\n                }\\n\\n                ol li {\\n                  counter-increment: step-counter;\\n\\n                  &::before {\\n                    content: counter(step-counter) \\\". \\\";\\n                    margin-right: 0.5rem;\\n                    margin-left: 1rem;\\n                    font-size: 1.5rem;\\n                  }\\n                }\\n\\n                em {\\n                  font-style: italic;\\n                }\\n\\n                strong {\\n                  font-weight: bold;\\n                }\\n\\n                .gatsby-resp-image-figcaption {\\n                  text-align: center;\\n                  display: block;\\n                  padding-bottom: 2rem;\\n                  margin-top: 0.5rem;\\n                  font-style: italic;\\n                }\\n              \"])), down('article'), down('sm'))] = true, _cx)) }, children); }), jsx(Footer, null, jsx(\"section\", { css: /*#__PURE__*/ css(\"margin:0 auto;\", up('md'), \"{width:75rem;}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:Default;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") }, jsx(Link, { to: \"/\", css: /*#__PURE__*/ css(\"padding-bottom:1rem;\", down('md'), \"{display:block;}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:Default;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") }, jsx(StaticImage, { css: /*#__PURE__*/ css(\"margin-top:0.5rem;\", down('md'), \"{left:50%;transform:translateX(-50%);}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:Default;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), height: 34, src: \"../images/zb-logo.svg\", alt: \"logo\", placeholder: \"tracedSVG\", __imageData: require(\"/home/runner/work/zmbush.com/zmbush.com/main/.cache/caches/gatsby-plugin-image/4132324843.json\") })), jsx(\"nav\", { css: /*#__PURE__*/ css(\"margin:0 auto;text-align:center;line-height:2.5rem;\", up('md'), \"{display:inline-block;a{padding-top:1.5rem;display:inline-block;}}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:Default;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") }, jsx(Link, { to: \"/\" }, \"About Me\"), jsx(Link, { to: \"/projects\" }, \"Projects\"), jsx(Link, { to: \"/contact\" }, \"Contact Me\")), jsx(\"div\", { css: /*#__PURE__*/ css(\"text-align:right;font-size:0.9rem;\", down('md'), \"{text-align:center;padding:1rem;}p{padding-bottom:0.5rem;}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:Default;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") }, jsx(\"p\", null, \"all content \\xA9 2011-\", new Date().getFullYear(), \" Zachary Bush\"), jsx(\"p\", null, \"Opinions expressed here are solely my own and do not express the views or opinions of my employer.\")))))); };\nexport default Default;\n"],"names":["_templateObject","_templateObject2","shortCodes","Toc","Caption","Footer","_styled","target","name","styles","_ref","_data$site","pageTitle","hideTitle","children","headerImg","subtitle","date","_ref$article","article","metadata","useStaticQuery","site","siteMetadata","jsx","Base","MDXProvider","components","Helmet","charSet","title","Navbar","Header","ClassNames","_ref2","_cx","cs","css","cx","_taggedTemplateLiteralLoose","down","up","Link","to","StaticImage","height","src","alt","placeholder","__imageData","require","Date","getFullYear"],"sourceRoot":""}