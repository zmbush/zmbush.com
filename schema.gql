### Type definitions saved at 2021-12-29T23:01:41.638Z ###

type Mdx implements Node @childOf(mimeTypes: ["text/markdown", "text/x-markdown"], types: ["File"]) @dontInfer {
  rawBody: String!
  fileAbsolutePath: String!
  frontmatter: Frontmatter
  slug: String
  body: String!
  excerpt(pruneLength: Int = 140, truncate: Boolean = false): String!
  headings(depth: HeadingsMdx): [MdxHeadingMdx]
  html: String
  mdxAST: JSON
  tableOfContents(maxDepth: Int): JSON
  timeToRead: Int
  wordCount: MdxWordCount
  fields: MdxFields!
}

type Frontmatter {
  title: String
  date: Date @dateformat(formatString: "YYYY-MM-DD")
  subtitle: String
  draft: Boolean
  heroImage: File @fileByRelativePath
  partners: [PartnerYaml!] @link(by: "ref")
  technologies: [TechnologyYaml!] @link(by: "ref")
  sourceUrl: String
  siteUrl: String
  siteName: String
  siteMsg: String
}

type File implements Node @dontInfer {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime: Date! @dateformat
  accessTime: Date! @dateformat
  changeTime: Date! @dateformat
  birthTime: Date! @dateformat
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime: Date! @dateformat
  mtime: Date! @dateformat
  ctime: Date! @dateformat
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
}

type PartnerYaml implements Node @childOf(mimeTypes: [], types: ["File"]) @dontInfer {
  ref: String!
  name: String!
  url: String!
}

type TechnologyYaml implements Node @childOf(mimeTypes: [], types: ["File"]) @dontInfer {
  ref: String!
  url: String!
  name: String!
  tagline: String!
  type: TechType!
}

enum TechType {
  LANGUAGE
  FRAMEWORK
  TOOL
}

type MdxHeadingMdx {
  value: String
  depth: Int
}

enum HeadingsMdx {
  h1
  h2
  h3
  h4
  h5
  h6
}

type MdxWordCount {
  paragraphs: Int
  sentences: Int
  words: Int
}

type MdxFields {
  date: Date! @dateformat(formatString: "YYYY-MM-DD")
  timestamp: Int!
  slug: String!
  source: String!
  title: String!
}

type OrganizationYaml implements Node @dontInfer {
  ref: String!
  name: String!
  url: String!
  tagline: String!
}